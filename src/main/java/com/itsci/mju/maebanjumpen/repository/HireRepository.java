package com.itsci.mju.maebanjumpen.repository;

import com.itsci.mju.maebanjumpen.model.Hire;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;
import org.springframework.stereotype.Repository;

import java.util.List;
import java.util.Optional;

@Repository
public interface HireRepository extends JpaRepository<Hire, Integer> {

    // Query ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Hire ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á
    @Query("SELECT DISTINCT h FROM Hire h " +
            "LEFT JOIN FETCH h.hirer hr " +
            "LEFT JOIN FETCH hr.person hrp " +
            "LEFT JOIN FETCH h.housekeeper hk " +
            "LEFT JOIN FETCH hk.person hkp " +
            "LEFT JOIN FETCH h.skillType st " +
//            "LEFT JOIN FETCH h.additionalSkillTypeIds " +
            "LEFT JOIN FETCH h.review r " + // ‚≠êÔ∏è FIX: ‡πÄ‡∏û‡∏¥‡πà‡∏° Space ‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÅ‡∏•‡πâ‡∏ß
            "LEFT JOIN FETCH h.progressionImageUrls") // ‚≠êÔ∏è FIX: ‡∏¢‡πâ‡∏≤‡∏¢ progressionImageUrls ‡∏Ç‡∏∂‡πâ‡∏ô‡∏°‡∏≤‡∏Å‡πà‡∏≠‡∏ô review
    List<Hire> findAllWithDetails();

    // Query ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Hire ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ hireId
    // üí° ‡πÄ‡∏°‡∏ò‡∏≠‡∏î‡∏ô‡∏µ‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏ß‡πâ‡∏ô‡∏ß‡∏£‡∏£‡∏Ñ
    @Query("SELECT DISTINCT h FROM Hire h " +
            "LEFT JOIN FETCH h.hirer hr " +
            "LEFT JOIN FETCH hr.person hrp " +
            "LEFT JOIN FETCH h.housekeeper hk " +
            "LEFT JOIN FETCH hk.person hkp " +
            "LEFT JOIN FETCH h.skillType st " +
            "LEFT JOIN FETCH h.review r " +
            "LEFT JOIN FETCH h.progressionImageUrls " +
            "WHERE h.hireId = :id")
    Optional<Hire> fetchByIdWithAllDetails(@Param("id") Integer id);

    // Query ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Hire ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡∏à‡πâ‡∏≤‡∏á (hirer)
    @Query("SELECT DISTINCT h FROM Hire h " +
            "LEFT JOIN FETCH h.hirer hr " +
            "LEFT JOIN FETCH hr.person hrp " +
            "LEFT JOIN FETCH h.housekeeper hk " +
            "LEFT JOIN FETCH hk.person hkp " +
            "LEFT JOIN FETCH h.skillType st " +
//            "LEFT JOIN FETCH h.additionalSkillTypeIds " +
            "LEFT JOIN FETCH h.review r " + // ‚≠êÔ∏è FIX: ‡πÄ‡∏û‡∏¥‡πà‡∏° Space ‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà
            "LEFT JOIN FETCH h.progressionImageUrls " + // ‚≠êÔ∏è FIX: ‡πÄ‡∏û‡∏¥‡πà‡∏° Space ‡∏ô‡∏≥‡∏´‡∏ô‡πâ‡∏≤ 'WHERE'
            "WHERE hr.id = :hirerId")
    List<Hire> findByHirerIdWithDetails(@Param("hirerId") Integer hirerId);

    // Query ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Hire ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏• (housekeeper)
    @Query("SELECT DISTINCT h FROM Hire h " +
            "LEFT JOIN FETCH h.hirer hr " +
            "LEFT JOIN FETCH hr.person hrp " +
            "LEFT JOIN FETCH h.housekeeper hk " +
            "LEFT JOIN FETCH hk.person hkp " +
            "LEFT JOIN FETCH h.skillType st " +
//            "LEFT JOIN FETCH h.additionalSkillTypeIds " +
            "LEFT JOIN FETCH h.review r " + // ‚≠êÔ∏è FIX: ‡πÄ‡∏û‡∏¥‡πà‡∏° Space ‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà
            "LEFT JOIN FETCH h.progressionImageUrls " + // ‚≠êÔ∏è FIX: ‡πÄ‡∏û‡∏¥‡πà‡∏° Space ‡∏ô‡∏≥‡∏´‡∏ô‡πâ‡∏≤ 'WHERE'
            "WHERE hk.id = :housekeeperId")
    List<Hire> findByHousekeeperIdWithDetails(@Param("housekeeperId") Integer housekeeperId);

    /**
     * üí° NEW QUERY METHOD: ‡∏î‡∏∂‡∏á‡∏á‡∏≤‡∏ô‡∏à‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏° Housekeeper ID ‡πÅ‡∏•‡∏∞ Job Status (‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î)
     * üí° ‡πÄ‡∏°‡∏ò‡∏≠‡∏î‡∏ô‡∏µ‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏ß‡πâ‡∏ô‡∏ß‡∏£‡∏£‡∏Ñ
     */
    @Query("SELECT DISTINCT h FROM Hire h " +
            "LEFT JOIN FETCH h.hirer hr " +
            "LEFT JOIN FETCH hr.person hrp " +
            "LEFT JOIN FETCH h.housekeeper hk " +
            "LEFT JOIN FETCH hk.person hkp " +
            "LEFT JOIN FETCH h.skillType st " +
            "LEFT JOIN FETCH h.review r " +
            "LEFT JOIN FETCH h.progressionImageUrls " +
            "WHERE hk.id = :housekeeperId AND h.jobStatus = :jobStatus")
    List<Hire> findByHousekeeperIdAndJobStatusWithDetails(@Param("housekeeperId") Integer housekeeperId, @Param("jobStatus") String jobStatus);
}