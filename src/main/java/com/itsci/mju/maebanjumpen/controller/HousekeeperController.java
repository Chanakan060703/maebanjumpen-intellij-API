package com.itsci.mju.maebanjumpen.controller;

import com.itsci.mju.maebanjumpen.dto.HousekeeperDTO;
import com.itsci.mju.maebanjumpen.dto.HousekeeperDetailDTO; // üí° ‡πÄ‡∏û‡∏¥‡πà‡∏° import DTO ‡∏ï‡∏±‡∏ß‡πÉ‡∏´‡∏°‡πà
import com.itsci.mju.maebanjumpen.service.HousekeeperService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@RestController
@RequestMapping("/maeban/housekeepers")
public class HousekeeperController {

    @Autowired
    private HousekeeperService housekeeperService;

    // ... (‡πÄ‡∏°‡∏ò‡∏≠‡∏î getAllHousekeepers ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°)
    @GetMapping
    public ResponseEntity<List<HousekeeperDTO>> getAllHousekeepers() {
        List<HousekeeperDTO> housekeepers = housekeeperService.getAllHousekeepers();
        return ResponseEntity.ok(housekeepers);
    }

    // üéØ ‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç 1: ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠ Endpoint ‡πÅ‡∏•‡∏∞‡∏ä‡∏ô‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏Ñ‡∏∑‡∏ô
    // Endpoint ‡∏ô‡∏µ‡πâ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏î‡∏∂‡∏á "‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î" ‡∏ó‡∏µ‡πà‡∏°‡∏µ JobsCompleted ‡πÅ‡∏•‡∏∞ Reviews
    @GetMapping("/{id}")
    public ResponseEntity<HousekeeperDetailDTO> getHousekeeperDetailById(@PathVariable int id) {
        // ‡πÉ‡∏ä‡πâ‡πÄ‡∏°‡∏ò‡∏≠‡∏î getHousekeeperDetailById ‡∏à‡∏≤‡∏Å Service
        HousekeeperDetailDTO housekeeper = housekeeperService.getHousekeeperDetailById(id);
        if (housekeeper == null) {
            return ResponseEntity.notFound().build();
        }
        return ResponseEntity.ok(housekeeper);
    }

    // ... (‡πÄ‡∏°‡∏ò‡∏≠‡∏î getHousekeepersByStatus ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°)
    @GetMapping("/status/{status}")
    public ResponseEntity<List<HousekeeperDTO>> getHousekeepersByStatus(@PathVariable String status) {
        List<HousekeeperDTO> housekeepers = housekeeperService.getHousekeepersByStatus(status);
        return ResponseEntity.ok(housekeepers);
    }

    // ... (‡πÄ‡∏°‡∏ò‡∏≠‡∏î getUnverifiedOrNullStatusHousekeepers ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°)
    @GetMapping("/unverified-or-null")
    public ResponseEntity<List<HousekeeperDTO>> getUnverifiedOrNullStatusHousekeepers() {
        List<HousekeeperDTO> housekeepers = housekeeperService.getNotVerifiedOrNullStatusHousekeepers();
        return ResponseEntity.ok(housekeepers);
    }

    // ... (‡πÄ‡∏°‡∏ò‡∏≠‡∏î CRUD ‡∏≠‡∏∑‡πà‡∏ô‡πÜ ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°)
    @PostMapping
    public ResponseEntity<HousekeeperDTO> createHousekeeper(@RequestBody HousekeeperDTO housekeeper) {
        HousekeeperDTO savedHousekeeper = housekeeperService.saveHousekeeper(housekeeper);
        return ResponseEntity.ok(savedHousekeeper);
    }

    @PutMapping("/{id}")
    public ResponseEntity<HousekeeperDTO> updateHousekeeper(@PathVariable int id, @RequestBody HousekeeperDTO housekeeper) {
        HousekeeperDTO updatedHousekeeper = housekeeperService.updateHousekeeper(id, housekeeper);
        if (updatedHousekeeper == null) {
            return ResponseEntity.notFound().build();
        }
        return ResponseEntity.ok(updatedHousekeeper);
    }

    @DeleteMapping("/{id}")
    public ResponseEntity<Void> deleteHousekeeper(@PathVariable int id) {
        housekeeperService.deleteHousekeeper(id);
        return ResponseEntity.noContent().build();
    }

    // üí° ‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏¢‡∏Å Endpoint ‡∏î‡∏∂‡∏á HousekeeperDTO (‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô)
    // ‡∏Ñ‡∏ß‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏°‡∏ò‡∏≠‡∏î‡πÉ‡∏´‡∏°‡πà ‡πÄ‡∏ä‡πà‡∏ô getHousekeeperBaseById ‡πÅ‡∏•‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏ô Service
    // ‡πÅ‡∏ï‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ getHousekeeperDetailById ‡πÉ‡∏ô /housekeepers/{id} ‡∏Å‡πá‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏û‡∏≠‡πÅ‡∏•‡πâ‡∏ß
}